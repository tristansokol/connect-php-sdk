<?php
/**
 * VItemsApiTest
 * PHP version 5
 *
 * @category Class
 * @package  SquareConnect
 * @author   Square Inc.
 * @license  Apache Licene v2 - http://www.apache.org/licenses/LICENSE-2.0
 * @link     https://squareup.com/developers
 */
/**
 *  Copyright 2016 Square, Inc.
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

/**
 * Square Connect API
 *
 * Client library for accessing the Square Connect APIs
 *
 * OpenAPI spec version: 3.0
 * Contact: developers@squareup.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace SquareConnect;

use \SquareConnect\Configuration;
use \SquareConnect\ApiClient;
use \SquareConnect\ApiException;
use \SquareConnect\ObjectSerializer;

/**
 * VItemsApiTest Class Doc Comment
 *
 * @category Class
 * @package  SquareConnect
 * @author   Square Inc.
 * @license  Apache Licene v2 - http://www.apache.org/licenses/LICENSE-2.0
 * @link     https://squareup.com/developers
 */
class VItemsApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {

    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {

    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {

    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {

    }

    /**
     * Test case for v1AdjustInventory
     *
     * Adjusts an item variation's current available inventory..
     *
     */
    public function testV1AdjustInventory()
    {

    }

    /**
     * Test case for v1ApplyFee
     *
     * Associates a fee with an item, meaning the fee is automatically applied to the item in Square Register..
     *
     */
    public function testV1ApplyFee()
    {

    }

    /**
     * Test case for v1ApplyModiferList
     *
     * Associates a modifier list with an item, meaning modifier options from the list can be applied to the item..
     *
     */
    public function testV1ApplyModiferList()
    {

    }

    /**
     * Test case for v1CreateCategory
     *
     * Creates an item category..
     *
     */
    public function testV1CreateCategory()
    {

    }

    /**
     * Test case for v1CreateDiscount
     *
     * Creates a discount..
     *
     */
    public function testV1CreateDiscount()
    {

    }

    /**
     * Test case for v1CreateFee
     *
     * Creates a fee (tax)..
     *
     */
    public function testV1CreateFee()
    {

    }

    /**
     * Test case for v1CreateItem
     *
     * Creates an item and at least one variation for it..
     *
     */
    public function testV1CreateItem()
    {

    }

    /**
     * Test case for v1CreateModifierList
     *
     * Creates an item modifier list and at least one modifier option for it..
     *
     */
    public function testV1CreateModifierList()
    {

    }

    /**
     * Test case for v1CreateModifierListOption
     *
     * Creates an item modifier option and adds it to a modifier list..
     *
     */
    public function testV1CreateModifierListOption()
    {

    }

    /**
     * Test case for v1CreatePage
     *
     * Creates a Favorites page in Square Register..
     *
     */
    public function testV1CreatePage()
    {

    }

    /**
     * Test case for v1CreateVariation
     *
     * Creates an item variation for an existing item..
     *
     */
    public function testV1CreateVariation()
    {

    }

    /**
     * Test case for v1DeleteFee
     *
     * Deletes an existing fee (tax)..
     *
     */
    public function testV1DeleteFee()
    {

    }

    /**
     * Test case for v1DeleteItem
     *
     * Deletes an existing item and all item variations associated with it..
     *
     */
    public function testV1DeleteItem()
    {

    }

    /**
     * Test case for v1DeleteItemCategory
     *
     * Deletes an existing item category..
     *
     */
    public function testV1DeleteItemCategory()
    {

    }

    /**
     * Test case for v1DeleteItemDiscount
     *
     * Deletes an existing discount..
     *
     */
    public function testV1DeleteItemDiscount()
    {

    }

    /**
     * Test case for v1DeleteModiferList
     *
     * Deletes an existing item modifier list and all modifier options associated with it..
     *
     */
    public function testV1DeleteModiferList()
    {

    }

    /**
     * Test case for v1DeleteModiferListOption
     *
     * Deletes an existing item modifier option from a modifier list..
     *
     */
    public function testV1DeleteModiferListOption()
    {

    }

    /**
     * Test case for v1DeletePage
     *
     * Deletes an existing Favorites page and all of its cells..
     *
     */
    public function testV1DeletePage()
    {

    }

    /**
     * Test case for v1DeletePageCell
     *
     * Deletes a cell from a Favorites page in Square Register..
     *
     */
    public function testV1DeletePageCell()
    {

    }

    /**
     * Test case for v1DeleteVaration
     *
     * Deletes an existing item variation from an item..
     *
     */
    public function testV1DeleteVaration()
    {

    }

    /**
     * Test case for v1ListDiscounts
     *
     * Lists all of a location's discounts..
     *
     */
    public function testV1ListDiscounts()
    {

    }

    /**
     * Test case for v1ListFees
     *
     * Lists all of a location's fees (taxes)..
     *
     */
    public function testV1ListFees()
    {

    }

    /**
     * Test case for v1ListInventory
     *
     * Provides inventory information for all of a merchant's inventory-enabled item variations..
     *
     */
    public function testV1ListInventory()
    {

    }

    /**
     * Test case for v1ListItemCategories
     *
     * Lists all of a location's item categories..
     *
     */
    public function testV1ListItemCategories()
    {

    }

    /**
     * Test case for v1ListItems
     *
     * Provides summary information for all of a location's items..
     *
     */
    public function testV1ListItems()
    {

    }

    /**
     * Test case for v1ListModifierLists
     *
     * Lists all of a location's modifier lists..
     *
     */
    public function testV1ListModifierLists()
    {

    }

    /**
     * Test case for v1ListPages
     *
     * Lists all of a location's Favorites pages in Square Register..
     *
     */
    public function testV1ListPages()
    {

    }

    /**
     * Test case for v1RemoveFee
     *
     * Removes a fee assocation from an item, meaning the fee is no longer automatically applied to the item in Square Register..
     *
     */
    public function testV1RemoveFee()
    {

    }

    /**
     * Test case for v1RemoveModiferList
     *
     * Removes a modifier list association from an item, meaning modifier options from the list can no longer be applied to the item..
     *
     */
    public function testV1RemoveModiferList()
    {

    }

    /**
     * Test case for v1RetrieveItem
     *
     * Provides the details for a single item, including associated modifier lists and fees..
     *
     */
    public function testV1RetrieveItem()
    {

    }

    /**
     * Test case for v1RetrieveModiferList
     *
     * Provides the details for a single modifier list..
     *
     */
    public function testV1RetrieveModiferList()
    {

    }

    /**
     * Test case for v1UpdateFee
     *
     * Modifies the details of an existing fee (tax)..
     *
     */
    public function testV1UpdateFee()
    {

    }

    /**
     * Test case for v1UpdateItem
     *
     * Modifies the core details of an existing item..
     *
     */
    public function testV1UpdateItem()
    {

    }

    /**
     * Test case for v1UpdateItemCategory
     *
     * Modifies the details of an existing item category..
     *
     */
    public function testV1UpdateItemCategory()
    {

    }

    /**
     * Test case for v1UpdateItemDiscount
     *
     * Modifies the details of an existing discount..
     *
     */
    public function testV1UpdateItemDiscount()
    {

    }

    /**
     * Test case for v1UpdateModifierList
     *
     * Modifies the details of an existing item modifier list..
     *
     */
    public function testV1UpdateModifierList()
    {

    }

    /**
     * Test case for v1UpdateModifierListOption
     *
     * Modifies the details of an existing item modifier option..
     *
     */
    public function testV1UpdateModifierListOption()
    {

    }

    /**
     * Test case for v1UpdatePage
     *
     * Modifies the details of a Favorites page in Square Register..
     *
     */
    public function testV1UpdatePage()
    {

    }

    /**
     * Test case for v1UpdatePageCell
     *
     * Modifies a cell of a Favorites page in Square Register..
     *
     */
    public function testV1UpdatePageCell()
    {

    }

    /**
     * Test case for v1UpdateVaration
     *
     * Modifies the details of an existing item variation..
     *
     */
    public function testV1UpdateVaration()
    {

    }

}
